1.def coinChange(n):
    count=0
    while n>0:
        if(n>=4):
            n-=4
        elif(n==3):
            n-=3
        elif(n==2):
            n-=2
        elif(n==1):
            n-=1
        count+=1
    return count
        

2.def differenceSum(n):
    s1=str(n)
    s_e=0
    s_o=0
    for i, digit in enumerate(s1):
        if(i+1)%2==0:
            s_e+=int(digit)
        else:
            s_o+=int(digit)
    return abs(s_e - s_o)

n=1234567890
d=differenceSum(n)
            

3.def productDigits(n):
    pro=1
    sum1=0
    for i in range(len(str(n))):
        t=n%10
        if((i)%2==0):
            pro*=t
        else:
            sum1+=t
        n//=10
    if((pro%sum1)==0):
        return "True"
    else:
        return "False"


4.def automorphic(n):
    if n <= 0:
        return "Invalid input"  # Only positive integers are valid

    square = n * n
    if str(square).endswith(str(n)):
        return "Automorphic"
    else:
        return "Not Automorphic"
    


5.def checkUgly(n):
    if(n==0):
        return "not ugly"
    for i in [2,3,5]:
        while(n%i==0):
            n//=i
    if(n==1):
        return "ugly"
    else:
        return "not ugly"
    
    
            
            